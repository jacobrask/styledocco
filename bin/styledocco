#!/usr/bin/env node

// StyleDocco Command Line Interface
// =======================================================================
// Normalizes options to pass to StyleDocco.

var fs = require('fs');
var optimist = require('optimist');
var path = require('path');

// Abort and show current version number.
if (optimist.argv.version != null) {
  return console.log("StyleDocco " + (require('../package').version));
}

// Get the common prefix of an array of strings (paths).
var commonprefix = function(arr) {
  if (!arr.length) return null;
  if (arr.length === 1) return arr[0];
  return arr.reduce(function(res, cur) {
    while (res !== cur.slice(0, res.length)) {
      res = res.slice(0, -1);
    }
    return res;
  });
};

var isArray = function(obj) {
  return Object.prototype.toString.call(obj) === '[object Array]';
};

// Parse command line arguments
// -----------------------------------------------------------------------
var options = optimist
  .usage('Usage: $0 [options] [INPUT]')
  .describe('name', 'Name of the project').alias('n', 'name')
  .describe('out', 'Output directory').alias('o', 'out')['default']('out', 'docs')
  .describe('preprocessor', 'Custom preprocessor command')
  .describe('include', 'Extra CSS/JavaScript to include in previews')
  .describe('minify', 'Minify CSS/JavaScript')['default']('minify', true)
  .describe('verbose', 'Print status messages to stdout')
  .describe('version', 'Display StyleDocco version')
  .describe('theme', 'Sets the route folder for you style')
  .argv;

options['in'] = options._.length ? options._ : ['./'];

options.include = isArray(options.include) ? options.include
                                           : [ options.include ];

// Get common (absolute) path prefix of input files
options.basePath = commonprefix(
  options['in'].map(function(file) {
    return path.resolve(file);
  })
);
if (fs.statSync(options.basePath).isFile()) {
  options.basePath = path.dirname(options.basePath);
}

// Try to read name from package.json
if (options.name == null) {
  try { options.name = require(process.cwd() + '/package').name; }
  catch (ex) { options.name = ''; }
}

require('../cli.js')(options);
